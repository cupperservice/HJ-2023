AWSTemplateFormatVersion: '2010-09-09'
Description: 'sample resources'
Parameters:
  AZ1:
    Type: AWS::EC2::AvailabilityZone::Name
    Default: us-east-1a
  AZ2:
    Type: AWS::EC2::AvailabilityZone::Name
    Default: us-east-1b
  ClusterName:
    Type: String
    Default: my-cluster
Resources:
  MyVPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: 10.0.0.0/16
      InstanceTenancy: default
      Tags:
        - Key: Name
          Value: myvpc
  PublicSubnet1:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone:
        !Ref AZ1
      CidrBlock: 10.0.10.0/24
      MapPublicIpOnLaunch: false
      Tags: 
        - Key: Name
          Value: Public-subnet1
      VpcId:
        !Ref MyVPC
  PrivateSubnet1:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone:
        !Ref AZ1
      CidrBlock: 10.0.30.0/24
      MapPublicIpOnLaunch: false
      Tags: 
        - Key: Name
          Value: Private-subnet1
      VpcId:
        !Ref MyVPC
  IGW:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
        - Key: Name
          Value: igw
  IGWAttach:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      InternetGatewayId:
        !Ref IGW
      VpcId:
        !Ref MyVPC
  NATGW:
    Type: AWS::EC2::NatGateway
    Properties:
      AllocationId:
        !GetAtt NATGWEIP.AllocationId
      ConnectivityType: public
      SubnetId:
        !Ref PublicSubnet1
      Tags:
      - Key: Name
        Value: nat
  NATGWEIP:
    Type: AWS::EC2::EIP
    Properties:
      Domain: vpc
  PublicRT:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId:
        !Ref MyVPC
      Tags:
        - Key: Name
          Value: public
  PublicRoute:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId:
        !Ref PublicRT
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId:
        !Ref IGW
  PrivateRT:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId:
        !Ref MyVPC
      Tags:
        - Key: Name
          Value: private
  PrivateRoute:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId:
        !Ref PrivateRT
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId:
        !Ref NATGW
  PublicSubnet1RT:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId:
        !Ref PublicRT
      SubnetId:
        !Ref PublicSubnet1
  PrivateSubnet1RT:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId:
        !Ref PrivateRT
      SubnetId:
        !Ref PrivateSubnet1
Outputs:
  Vpc:
    Value:
      !Ref MyVPC
    Export:
      Name:
        !Join [ ":", [ !Ref "AWS::StackName", MyVPC ] ]
  PublicSubnet1:
    Value:
      !Ref PublicSubnet1
    Export:
      Name:
        !Join [ ":", [ !Ref "AWS::StackName", PublicSubnet1 ] ]
  PrivateSubnet1:
    Value:
      !Ref PrivateSubnet1
    Export:
      Name:
        !Join [ ":", [ !Ref "AWS::StackName", PrivateSubnet1 ] ]
